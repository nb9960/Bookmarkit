The contenttypes application contains a ContentType model. Instances of this model represent the actual models of your application, and new instances of ContentType are automatically created when new models are installed in your project. The ContentType model has the following fields:

    app_label: This indicates the name of the application that the model belongs to. This is automatically taken from the app_label attribute of the model Meta options. For example, your Image model belongs to the images application.
    model: The name of the model class.
    name: This indicates the human-readable name of the model. This is automatically taken from the verbose_name attribute of the model Meta options.
You will need three fields to set up a generic relation in a model:

    A ForeignKey field to ContentType: This will tell you the model for the relationship
    A field to store the primary key of the related object: This will usually be a PositiveIntegerField to match Django's automatic primary key fields
    A field to define and manage the generic relation using the two previous fields: The contenttypes framework offers a GenericForeignKey field for this purpose
